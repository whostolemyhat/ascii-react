{"version":3,"sources":["webpack:///webpack/bootstrap 0ac5c643214d5da19ed5","webpack:///./src/services/asciiWorker.js"],"names":[],"mappings":"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","file":"hash.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0ac5c643214d5da19ed5\n **/","// lodash chunk function\r\nconst chunk = function (array, count) {\r\n  if (count == null || count < 1) return [];\r\n\r\n  const result = [];\r\n  const length = array.length;\r\n  let i = 0;\r\n  while (i < length) {\r\n    result.push(Array.prototype.slice.call(array, i, i += count));\r\n  }\r\n  return result;\r\n};\r\n\r\nexport function pixelToChar (pixel, mapLength) {\r\n  const averageShade = Math.floor(pixel.r * 0.3 + pixel.b * 0.3 + pixel.g * 0.3);\r\n  return Math.floor((255 - averageShade) * (mapLength / 256));\r\n}\r\n\r\n// export const charMap = ['@', '#', '%', 'x', 'o', ';', ':', ',', '.'];\r\nexport const charMap = ['.', ',', ':', ';', 'o', 'x', '%', '#', '@'];\r\n\r\nself.onmessage = function (e) { // eslint-disable-line no-undef\r\n  const pixels = e.data[0];\r\n  const options = e.data[1];\r\n\r\n  const resolution = options.resolution > 0 ? Math.ceil(options.resolution) : 1;\r\n\r\n  if (options.whitespace === 'spaces') {\r\n    charMap[0] = ' ';\r\n  }\r\n\r\n  if (options.invert) {\r\n    // Note: works in-place!\r\n    charMap.reverse();\r\n  }\r\n\r\n  // r,g,b,a\r\n  const PIXEL_LENGTH = 4;\r\n  const imgWidth = (pixels.width * PIXEL_LENGTH);\r\n  const rowPercent = 100 / pixels.height;\r\n  const data = chunk(pixels.data, imgWidth);\r\n  const dataLength = data.length;\r\n  let out = '';\r\n\r\n  for (let i = 0; i < dataLength; i += resolution) {\r\n    for (let j = 0; j < data[i].length; j += PIXEL_LENGTH * resolution) {\r\n      const pixel = {};\r\n      pixel.r = data[i][j];\r\n      pixel.g = data[i][j + 1];\r\n      pixel.b = data[i][j + 2];\r\n      pixel.a = data[i][j + 3];\r\n\r\n      let char = charMap[ pixelToChar(pixel, charMap.length) ];\r\n      if (options.colour) {\r\n        char = `<span style=\"color:rgb(${ pixel.r }, ${ pixel.g }, ${ pixel.b })\">` +\r\n          char + '</span>';\r\n      }\r\n      out += char;\r\n    }\r\n\r\n    out += '\\r\\n';\r\n    postMessage({ type: 'progress', value: i * rowPercent });\r\n  }\r\n\r\n  postMessage({ type: 'result', value: out });\r\n};\r\n\r\nexport { self as AsciiWorker };\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/asciiWorker.js\n **/"],"sourceRoot":""}